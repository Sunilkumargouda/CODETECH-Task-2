pipeline {
    agent any
    
    tools{
        nodejs 'node21'
    }
    
    environment {
        SCANNER_HOME = tool 'sonar-scanner'
    }

    stages {
        stage('Git Checkout') {
            steps {
                git branch: 'main', credentialsId: 'git-cred', url: 'https://github.com/Sunilkumargouda/3-Tier-Full-Stack.git'
            }
        }
        
        stage('Install Package Dependencies') {
            steps {
                sh"npm install"
            }
        }
        
        stage('Unit Tests') {
            steps {
                sh "npm test"
            }
        }
        
        stage('Trivy FS Scan') {
            steps {
                sh "trivy fs --format table -o fs-report.html ."
            }
        }
        
         stage('SonarQube') {
            steps {
                withSonarQubeEnv('sonar') {
                    
                sh "$SCANNER_HOME/bin/sonar-scanner -Dsonar.projectKey=Campground -Dsonar.projectName=Campground"
            }
        }
        
        }
        
         stage('Docker Build & Tag ') {
            steps {
                script {
                    withDockerRegistry(credentialsId: 'docker-cred', toolName: 'docker')  {
                        sh "docker build -t sunilkumarr097550/camp:latest ."
                    }
                }
            }
        }
        
        stage('Trivy Image Scan') {
            steps {
                sh "trivy image --format table -o fs-report.html sunilkumarr097550/camp:latest"
            }
        }
        
         stage('Docker Push Image') {
            steps {
                script { 
                    withDockerRegistry(credentialsId: 'docker-cred', toolName: 'docker') {
                        sh "docker push sunilkumarr097550/camp:latest"
                    }
                }
            }
        }
        
        stage('Docker Deploy To Dev') {
            steps {
                script { 
                    withDockerRegistry(credentialsId: 'docker-cred', toolName: 'docker') {
                        sh "docker run -d -p 3000:3000 sunilkumarr097550/camp:latest"
                    }
                }
            }
        }

        stage('Deploy To EKS') {
            steps {
                withKubeCredentials(kubectlCredentials: [[caCertificate: '', clusterName: 'eks-5', contextName: '', credentialsId: 'k8-token', namespace: 'webapps', serverUrl: 'https://BD7F708BAA47726AF56657B837A034C0.gr7.ap-southeast-1.eks.amazonaws.com']]) {
                sh "kubectl apply -f dss.yml"
                sleep 60
            }
            }
        }
        
        stage('Verify The Deployment') {
            steps {
               withKubeCredentials(kubectlCredentials: [[caCertificate: '', clusterName: 'eks-5', contextName: '', credentialsId: 'k8-token', namespace: 'webapps', serverUrl: 'https://BD7F708BAA47726AF56657B837A034C0.gr7.ap-southeast-1.eks.amazonaws.com']]) {
                sh "kubectl get pods -n webapps"
                sh "kubectl get svc -n webapps"
            }
            }
        } 

    }
}    
